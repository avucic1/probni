{"version":3,"sources":["services/troskovi.js","components/Transakcija.js","App.js","index.js"],"names":["onsovniUrl","axios","get","id","noviObjekt","put","delete","Transakcija","props","vrsta","datum","opis","onClick","uredi","brisi","iznos","App","useState","trosak","noviTrosak","noviIznos","noviOpis","novaVrsta","vidljiv","postaviVidljivost","useEffect","then","res","data","console","log","trosakAkcija","response","promjenaVrste","e","target","value","ukupno","noviUkupno","sumaPrihoda","sumaRashoda","nizPrihod","filter","t","nizRashod","forEach","Number","onSubmit","preventDefault","Date","length","getFullYear","getMonth","getDate","concat","type","checked","onChange","map","transakcija","find","stariIznos","prompt","modTransakcija","urediTransakciju","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a76f3f8.chunk.js","sourcesContent":["import axios  from \"axios\";\r\n\r\nconst onsovniUrl='http://localhost:3001/api/troskovi/'\r\n\r\n\r\nconst dohvatiSve = () => {   \r\n    return axios.get(onsovniUrl);\r\n}\r\n \r\nconst stvori = noviObjekt => {\r\n    return axios.post(onsovniUrl, noviObjekt)\r\n}\r\n \r\nconst osvjezi = (id, noviObjekt) => {\r\n    return axios.put(`${onsovniUrl}/${id}`, noviObjekt)\r\n}\r\n\r\nconst brisi = id => {\r\n    return axios.delete(`${onsovniUrl}/${id}`)\r\n}\r\n \r\nexport default {\r\n    dohvatiSve: dohvatiSve,\r\n    stvori: stvori,\r\n    osvjezi: osvjezi,\r\n    brisi: brisi,\r\n  };\r\n  ","import React from 'react'\r\n//import './Transakcija.css'\r\n//import 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst Transakcija = (props) => {\r\n    return (\r\n        <tr>\r\n            <td>{props.vrsta}</td>\r\n            <td>{props.datum}</td>\r\n            <td>{props.opis}</td>\r\n            <td>\r\n                <button onClick={props.uredi} id=\"button-uredi\">Uredi</button>\r\n                <button onClick={props.brisi} id=\"button-brisi\">Briši</button>\r\n            </td>\r\n            <td>{props.iznos}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Transakcija\r\n","import React, {useState,useEffect} from 'react'\n\nimport axios from 'axios'\nimport './App.css'\nimport trosakAkcija from './services/troskovi'\n\nimport Transakcija from './components/Transakcija'\n\nconst App = (props) => {\n  const [ trosak, noviTrosak ] = useState([])\n  const [ iznos, noviIznos ] = useState('')\n  const [ opis, noviOpis ] = useState('')\n  const [ vrsta, novaVrsta ] = useState('Prihod')\n  const [ vidljiv, postaviVidljivost] = useState(false)\n\n  useEffect( () => {\n\t\n    axios.get(\"http://localhost:3001/api/troskovi\")\n\t\n    .then(res => noviTrosak(res.data))\n\t\n  }, [])\n \n  useEffect(() => {\n    console.log('Effect');\n\n    trosakAkcija.dohvatiSve().then((response) => {\n      noviTrosak(response.data);\n    });\n  }, []);\n\nconst onSubmit=(e)=>{\n  e.preventDefault();\n}\n\nconst promjenaVrste = (e) => {\n  console.log(e.target.value)\n  novaVrsta(e.target.value)\n}\n\nconst promjenaOpisa = (e) => {\n  console.log(e.target.value)\n  noviOpis(e.target.value)\n}\n\nconst promjenaIznosa = (e) => {\n  console.log(e.target.value)\n  noviIznos(e.target.value)\n}\n\nconst novTr = (e) => {\n  e.preventDefault();\n  var datum = new Date();\n        e.preventDefault()\n        console.log('Klik', e.target)\n        const noviObjekt = {\n            id: trosak.length + 1,\n            vrsta: vrsta,\n            datum: datum.getFullYear()+'-'+datum.getMonth()+'-'+datum.getDate(),\n            opis: opis,\n            iznos: iznos\n        }\n        noviTrosak(trosak.concat(noviObjekt))\n        noviIznos('')\n        noviOpis('')\n        novaVrsta('Prihod')\n        console.log(\"jeli ili ne\")\n}\n\nconst urediTransakciju = (id) => {\n  const transakcija = trosak.find(t => t.id === id)\n  let stariIznos = transakcija.iznos;\n  let noviIznos = prompt(`Unesite novi iznos za ${transakcija.opis}:`)\n\n  const modTransakcija = {\n      ...transakcija,\n      iznos: noviIznos == null ? stariIznos : noviIznos\n  }\n\n  trosakAkcija.osvjezi(id, modTransakcija)\n      .then(response => {\n          console.log(response)\n          noviTrosak(trosak.map(t => t.id !== id ? t : response.data))\n      })\n}\nconst [ukupno, noviUkupno] = useState(0);\n    useEffect(() => {\n        let sumaPrihoda = 0;\n        let sumaRashoda = 0;\n        let nizPrihod = trosak.filter(t => t.vrsta == 'Prihod');\n        let nizRashod = trosak.filter(t => t.vrsta == 'Rashod');\n        nizPrihod.forEach(t => sumaPrihoda += Number(t.iznos));\n        nizRashod.forEach(t => sumaRashoda += Number(t.iznos));\n        noviUkupno(sumaPrihoda - sumaRashoda)\n    }, [trosak])\n//Brisanje jedne transakcije\nconst brisiTrosak = (id) => {\n  trosakAkcija.brisi(id)\n      .then(response => {\n          console.log(response);\n          noviTrosak(trosak.filter(t => t.id !== id))\n      })\n}\n  return (\n    <div>\n            <h1>Transakcije</h1>\n            <button onClick={() => postaviVidljivost(!vidljiv)}>NOVI TROŠAK</button>\n            {vidljiv && \n\n                <form onSubmit={novTr}>\n                <label>Vrsta troška:</label><br/>\n                <input type='radio' value='Prihod' checked={vrsta==='Prihod'} onChange={promjenaVrste}/><label>Prihod</label><br/>\n                <input type='radio' value='Rashod' checked={vrsta==='Rashod'} onChange={promjenaVrste}/><label>Rashod</label><br/>\n                <label>Opis:</label><input type='text' value={opis} onChange={promjenaOpisa}/><br/>\n                <label>Iznos:</label><input type='text' value={iznos} onChange={promjenaIznosa}/><br/>\n                <button type='submit'>OK</button>\n                <button onClick={\n                    ()=>{\n                        \n                        noviIznos('')\n                        noviOpis('')\n                        novaVrsta('Prihod')\n                        postaviVidljivost(!vidljiv);\n                    }}>Cancel</button>\n                </form>\n\n            }\n            \n            <div>\n                <button>SAMO PRIHODI</button>\n                <button>SAMO RASHODI</button>\n                <button>SVE TRANSAKCIJE</button>\n            </div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>VRSTA</th>\n                        <th>DATUM</th>\n                        <th>OPIS</th>\n                        <th>OPCIJE</th>\n                        <th>IZNOS</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {trosak.map(t =>\n                        <Transakcija key={t.id} vrsta={t.vrsta} datum={t.datum} opis={t.opis} iznos={t.iznos + 'kn'}\n                            uredi={() => urediTransakciju(t.id)}\n                            brisi={() => brisiTrosak(t.id)}\n                        />)}\n                </tbody>\n                <tfoot>\n                    <tr>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td id=\"td\">Ukupno:</td>\n                        <td>{ukupno + 'kn'}</td>\n                    </tr>\n                </tfoot>\n            </table>\n            <label>UKUPNO: </label>\n        </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}